import Core'Map'StringMap
import Core'Map'NumberMap
import Core'List

type Result {
  Value [Trace] | none
  IsValid boolean
}
type Kind = number
type Rule = \(string, [Rule]) Result


type Trace {
  startAt number
  endAt number | none
  kind Kind
}

Length = \(trace Trace) number {
  if endAt = trace.endAt as number {
    endAt - trace.startAt
  } else {
    0
  }
}

New = \(logic [Rule]) \(string) Result {
  \(data string) Result {
    if top = List'First(logic, none) as Rule {
      top(data, logic)
    } else {
      Result{Value: none, IsValid: false}
    }
  }
}