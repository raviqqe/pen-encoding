import Core'List

type Result {
  Value [Trace] | none
  Valid boolean
}

type Rule {
  apply \(string, [Rule]) Result
}

type Trace {
  startAt number
  endAt number | none
  kind string
}

Length = \(trace Trace) number {
  if endAt = trace.endAt as number {
    endAt - trace.startAt
  } else {
    0
  }
}

New = \(rs [Rule]) \(string) Result {
  \(s string) Result {
    if [r, ...rs] = rs {
      r().apply(s, rs)
    } else {
      Result{Value: none, Valid: false}
    }
  }
}
